package com.door.auth.security;

import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.door.auth.data.entity.User;

public class UserDetailsImpl implements UserDetails {
	private static final long serialVersionUID = 1L;
	
	public Long idLong;
	public String username;
	public String email;
	public String password;
	public Collection<? extends GrantedAuthority> authorities;
	
	public UserDetailsImpl(long id, String name, String email, String password, List<GrantedAuthority> authorities2) {
		
	}



	public static UserDetailsImpl build(User user) {
		List<GrantedAuthority> authorities = user.getRol().stream()
				.map(rol -> new SimpleGrantedAuthority(rol.getRol().name()))
				.collect(Collectors.toList());
		
		return new UserDetailsImpl(
					user.getId(),
					user.getName(),
					user.getEmail(),
					user.getPassword(),
					authorities
				);
		
	}
	


	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return authorities;
	}

	@Override
	public String getPassword() {
		return password;
	}

	@Override
	public String getUsername() {
		return username;
	}
	
	public String getEmail() {
		return email;
	}

	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}
	
	

}
