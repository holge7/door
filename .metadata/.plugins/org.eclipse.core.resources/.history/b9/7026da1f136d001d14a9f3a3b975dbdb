package com.door.auth.security;

import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import com.door.auth.exception.UserRegisterNotValidException;

@Component
public class CustomAuthenticationManager implements AuthenticationManager {
	
	private UserDetailsServiceImpl userDetailsServiceImpl;
	private PasswordEncoder passwordEncoder;
	
	public CustomAuthenticationManager(UserDetailsServiceImpl userDetailsServiceImpl, PasswordEncoder passwordEncoder) {
		this.userDetailsServiceImpl = userDetailsServiceImpl;
		this.passwordEncoder = passwordEncoder;
	}

	@Override
	public Authentication authenticate(Authentication authentication) throws AuthenticationException {
		System.out.println("===============");
		System.out.println("2");
		System.out.println("===============");
		final UserDetails userDetails = userDetailsServiceImpl.loadUserByEmail(authentication.getName());
		
		if (!passwordEncoder.matches(authentication.getCredentials().toString(), userDetails.getPassword())) {
			throw new UserRegisterNotValidException();
		}
		
		return new UsernamePasswordAuthenticationToken(
				userDetails, 
				userDetails.getPassword(),
				userDetails.getAuthorities());
	}
	
}
