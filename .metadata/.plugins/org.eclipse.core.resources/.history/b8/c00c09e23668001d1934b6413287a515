package com.shop.apigateway;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.HashSet;
import java.util.Set;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.shop.apigateway.dto.payload.request.LoginRequest;
import com.shop.apigateway.exception.UserException;
import com.shop.apigateway.model.ERol;
import com.shop.apigateway.model.Rol;
import com.shop.apigateway.model.User;
import com.shop.apigateway.repository.UserRepository;
import com.shop.apigateway.service.UserService;
import com.shop.apigateway.util.ApiResponse;

@SpringBootTest
class ApiAuthApplicationTests {
	
	@Autowired
	UserRepository userRepository;
	
	@Autowired
	PasswordEncoder passwordEncoder;
	
	@Autowired
	UserService userService;

	@Test
	void login_user() {
		
		//when(userRepository)
		
		String email = "jorge@gmail.com";
		String password = passwordEncoder.encode("password");
		Set<Rol> roles = new HashSet<>();
		roles.add(new Rol(ERol.ROLE_USER));
		
		// Save user
		User user = new User(email, "Jorge", password, roles);
		//User userSave = userRepository.save(user);
		
		// Loggin user
		LoginRequest loginRequest = new LoginRequest(email, password);
		System.out.println(loginRequest);
		ResponseEntity<ApiResponse> response = userService.login(loginRequest);
		
		assertThat(response.status(HttpStatus.OK));
		
	}

}
